version: 0.2

# CodeBuild spec for Frontend React Application
# This buildspec file defines the build process for the frontend application

env:
  variables:
    NODE_VERSION: "18"
    AWS_DEFAULT_REGION: "eu-west-2"
    FRONTEND_REPO_NAME: "frontend-repo"
  #parameter-store:
    # Optional: Store sensitive values in Parameter Store
    # REACT_APP_API_URL: "/devops-demo/frontend/api-url"
  
phases:
  install:
    runtime-versions:
      nodejs: $NODE_VERSION
    commands:
      - echo "Installing dependencies..."
      - node --version
      - npm --version
      
  # AWS CLI is already available in the standard CodeBuild image; no manual install needed
      
      # Login to ECR
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      
  pre_build:
    commands:
      - echo "Pre-build phase started on `date`"
      - echo "Installing frontend dependencies..."
      - cd frontend
      - npm ci --cache .npm --prefer-offline
      
      # Run tests
      - echo "Running tests..."
      - npm test -- --coverage --ci --watchAll=false || echo "Tests failed or not found, skipping..."
      
      # Security scan
      - echo "Running security audit..."
      - npm audit --audit-level=moderate || echo "npm audit found vulnerabilities or failed, skipping..."
      
      # Lint code
      - echo "Running linter..."
      - npm run lint || echo "No lint script found, skipping..."
      
  build:
    commands:
      - echo "Build phase started on `date`"
      
      # Build the React application
      - echo "Building React application..."
      - npm run build
      
      # Verify build artifacts
      - ls -la build/
      
      # Build Docker image
      - echo "Building Docker image..."
      - IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION:-latest}
      - IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$FRONTEND_REPO_NAME:$IMAGE_TAG
      - echo "Building image $IMAGE_URI"
      - docker build -t $FRONTEND_REPO_NAME:$IMAGE_TAG .
      - docker tag $FRONTEND_REPO_NAME:$IMAGE_TAG $IMAGE_URI
      
      # Tag with latest
      - docker tag $FRONTEND_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$FRONTEND_REPO_NAME:latest
      
  post_build:
    commands:
      - echo "Post-build phase started on `date`"
      
      # Push Docker image to ECR
      - echo "Pushing Docker image to ECR..."
      - docker push $IMAGE_URI
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$FRONTEND_REPO_NAME:latest
      
      # Create image definitions file for CodeDeploy
      - cd ..
      - echo '[{"name":"frontend","imageUri":"'$IMAGE_URI'"}]' > imagedefinitions.json
      - cat imagedefinitions.json
      
      # Generate deployment artifacts
      - echo "Generating deployment artifacts..."
      - echo $IMAGE_URI > frontend-image-uri.txt
      - echo "Build completed successfully"
      
artifacts:
  files:
    - imagedefinitions.json
  name: frontend-build-artifacts-$(date +%Y-%m-%d-%H-%M-%S)
  
cache:
  paths:
    - frontend/.npm/**/*
    - frontend/node_modules/**/*

reports:
  frontend-test-reports:
    files:
      - 'frontend/coverage/clover.xml'
    file-format: 'CLOVERXML'
  frontend-jest-reports:
    files:
      - 'frontend/test-results.xml'
    file-format: 'JUNITXML'
